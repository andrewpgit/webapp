version: 2.1
executors:
  build-executor:
    environment:
      IMAGE_NAME: ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
    docker:
      - image: andrewpgit/alpine-git:3.11
    working_directory: ~/build
jobs:
  build:
    executor: build-executor

    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Install dependencies
          command: |
            echo "Install packages"
            VER='18.06.3-ce'
            apk add --no-cache libffi-dev openssl-dev gcc libc-dev make git
            wget -O /tmp/docker-${VER}.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${VER}.tgz
            tar -xz -C /tmp -f /tmp/docker-${VER}.tgz
            mv /tmp/docker/* /usr/local/bin/

      - run:
          name: build images
          command: |
            echo ${CIRCLE_BRANCH}
            make  -e IMAGE_NAME=${IMAGE_NAME} -e TAG=latest build
      - run:
          name: Archive docker image.
          command: |
              make -e IMAGE_NAME=${IMAGE_NAME}  archive

      - persist_to_workspace:
          root: .
          paths:
            - .


  push_image:
    executor: build-executor

    steps:
      - attach_workspace:
          at: ~/build

      - setup_remote_docker

      - run:
          name: Load docker image
          command: |
            echo "Install packages"
            VER='18.06.3-ce'
            wget -O /tmp/docker-${VER}.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${VER}.tgz
            tar -xz -C /tmp -f /tmp/docker-${VER}.tgz
            mv /tmp/docker/* /usr/local/bin
            docker load -i ~/build/image.tar

      - deploy:
          name: deployment
          command: |


            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

            if  [ -n  "$CIRCLE_BRANCH" ]; then
                GIT_SHA1=$(CIRCLE_SHA1 | cut -c "1-6")
                docker tag $IMAGE_NAME:latest $IMAGE_NAME:${CIRCLE_BRANCH}-${GIT_SHA1}
                make -e IMAGE_NAME=${IMAGE_NAME} -e TAG=${CIRCLE_BRANCH}-latest release
            fi

            if  [ -n "$CIRCLE_TAG" ]; then
                echo   ${CIRCLE_BRANCH}
                docker tag ${IMAGE_NAME}:latest  ${IMAGE_NAME}:${CIRCLE_TAG}
                make -e IMAGE_NAME=${IMAGE_NAME} -e TAG=${CIRCLE_TAG} release
            fi


workflows:
  version: 2
  build_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
      - push_image:
          requires:
            - build
          context: docker-context
          filters:
            tags:
              only: /^v.*/
